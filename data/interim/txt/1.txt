doc_id: 1
Лекция 10 Redux Разработка интернет приложений Канев Антон Игоревич
Доработки фронтенда Авторизация • Добавить окна регистрации и аутентификации • Добавить логику проверки авторизации пользователя – после успешной авторизации меняется состояние приложения • Авторизованный пользователь может разлогиниться • Авторизованному пользователю доступен больший объем функционала в зависимости от его роли • Поля поиска, сложные формы с дополнительными полями и тд
MVC vs Flux
Flux
React https://react.dev/community/team
Поток данных и сообщений React
React + Redux
Виды Redux • Redux классовый • Redux функциональный через Hooks • Redux Toolkit – мы используем его в лабораторных • Помимо Redux есть другие контекстные менеджеры, например MobX • Также всегда остается стандартный useContext + useReducer
useReducer + useContext
Базовый пример Redux Toolkit • Опишем пример простого Slice • Здесь уже все наши основные составляющие: reducer, acaon, iniaalState
Хранилище • Создадим store • Подключим его в наше приложение
Сделаем корзину без API • Опишем slice • Опишем наши данные и начальные состояние для них • Состав корзины и ее стоимость
Reducer, action, selector • Укажем какие action каким reducer соответствуют • Опишем наши функции reducer для изменения данных в store – указываем варианты для изменения наших данных • Используем useSelector, чтобы отобразить изменения из нашего store в UI
Наш компонент • useDispatch чтобы инициировать из event (события) изменение в store через ac\on • useSelector чтобы поймать изменение в store для render UI
Добавим взаимодействие с API • Добавим вызов axios в useEffect при монтировании страницы с нашим компонентом • При этом мы только отправляем новые данные в store • UI описан в отдельном файле и изменения в store в него придут через useSelector